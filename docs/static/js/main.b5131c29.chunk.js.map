{"version":3,"sources":["components/TodoItem.js","components/Input.js","components/Filter.js","components/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItem","item","onCheck","className","type","checked","done","onChange","classNames","text","Input","onAdd","useState","setText","placeholder","value","e","target","onKeyDown","key","Filter","handleClick","preventDefault","href","onClick","bind","Todo","items","setItems","filter","setFilter","displayItems","handleCheck","newItems","map","Math","random","toString","substring","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAsBeA,MAnBf,YAAsC,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QAKxB,OACE,wBAAOC,UAAU,cAAjB,UACE,uBAAOC,KAAK,WAAWC,QAASJ,EAAKK,KAAMC,SAN1B,WACnBL,EAAQD,MAMN,sBACEE,UAAWK,IAAW,CACpB,sBAAuBP,EAAKK,OAFhC,SAKGL,EAAKQ,WCYCC,MA1Bf,YAA2B,IAAVC,EAAS,EAATA,MAAS,EACAC,mBAAS,IADT,mBACjBH,EADiB,KACXI,EADW,KAYxB,OACE,qBAAKV,UAAU,cAAf,SACE,uBACEA,UAAU,QACVC,KAAK,OACLU,YAAY,eACZC,MAAON,EACPF,SAhBe,SAAAS,GAAC,OAAIH,EAAQG,EAAEC,OAAOF,QAiBrCG,UAfgB,SAAAF,GACN,UAAVA,EAAEG,MACJR,EAAMF,GACNI,EAAQ,WC0BCO,MAjCf,YAAsC,IAApBL,EAAmB,EAAnBA,MAAOR,EAAY,EAAZA,SACjBc,EAAc,SAACF,EAAKH,GACxBA,EAAEM,iBACFf,EAASY,IAGX,OACE,sBAAKhB,UAAU,aAAf,UACE,mBACEoB,KAAK,IACLC,QAASH,EAAYI,KAAK,KAAM,OAChCtB,UAAWK,IAAW,CAAE,YAAuB,QAAVO,IAHvC,iBAOA,mBACEQ,KAAK,IACLC,QAASH,EAAYI,KAAK,KAAM,QAChCtB,UAAWK,IAAW,CAAE,YAAuB,SAAVO,IAHvC,kBAOA,mBACEQ,KAAK,IACLC,QAASH,EAAYI,KAAK,KAAM,QAChCtB,UAAWK,IAAW,CAAE,YAAuB,SAAVO,IAHvC,sBCqBSW,MAvCf,WAAiB,IAAD,EACYd,mBAAS,IADrB,mBACPe,EADO,KACAC,EADA,OAEchB,mBAAS,OAFvB,mBAEPiB,EAFO,KAECC,EAFD,KAURC,EAAeJ,EAAME,QAAO,SAAC5B,GACjC,MAAe,QAAX4B,IACW,SAAXA,GAA2B5B,EAAKK,KACrB,SAAXuB,EAA0B5B,EAAKK,UAAnC,MAGI0B,EAAc,SAAC3B,GACnB,IAAM4B,EAAWN,EAAMO,KAAI,SAACjC,GAI1B,OAHIA,EAAKkB,MAAQd,EAAQc,MACvBlB,EAAKK,MAAQL,EAAKK,MAEbL,KAET2B,EAASK,IAGX,OACE,sBAAK9B,UAAU,QAAf,UACE,qBAAKA,UAAU,gBAAf,qCACA,cAAC,EAAD,CAAOQ,MAzBO,SAACF,GACjBmB,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAAER,IAPLgB,KAAKC,SAASC,SAAS,IAAIC,UAAU,GAOjB7B,OAAMH,MAAM,SAyB/C,cAAC,EAAD,CAAQC,SAtBe,SAACQ,GAAD,OAAWe,EAAUf,IAsBNA,MAAOc,IAC5CE,EAAaG,KAAI,SAACjC,GAAD,OAChB,cAAC,EAAD,CAAyBA,KAAMA,EAAMC,QAAS8B,GAA/B/B,EAAKkB,QAEtB,sBAAKhB,UAAU,cAAf,UAA8B4B,EAAaQ,OAA3C,gB,MC7BSC,MARf,WACE,OACE,qBAAKrC,UAAU,qBAAf,SACE,cAAC,EAAD,OCKSsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b5131c29.chunk.js","sourcesContent":["import React from \"react\";\nimport classNames from 'classnames';\n\nfunction TodoItem({ item, onCheck }) {\n  const handleChange = () => {\n    onCheck(item);\n  };\n\n  return (\n    <label className=\"panel-block\">\n      <input type=\"checkbox\" checked={item.done} onChange={handleChange} />\n      <span\n        className={classNames({\n          \"has-text-grey-light\": item.done,\n        })}\n      >\n        {item.text}\n      </span>\n    </label>\n  );\n}\n\nexport default TodoItem;\n\n","import React, { useState } from 'react'\n\nfunction Input({ onAdd }) {\n  const [text, setText] = useState('');\n\n  const handleChange = e => setText(e.target.value);\n\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      onAdd(text);\n      setText('');\n    }\n  };\n\n  return (\n    <div className=\"panel-block\">\n      <input\n        className=\"input\"\n        type=\"text\"\n        placeholder=\"Enter to add\"\n        value={text}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n      />\n    </div>\n  );\n}\n\nexport default Input\n","import React from \"react\";\nimport classNames from 'classnames';\n\nfunction Filter({ value, onChange }) {\n  const handleClick = (key, e) => {\n    e.preventDefault();\n    onChange(key);\n  };\n\n  return (\n    <div className=\"panel-tabs\">\n      <a\n        href=\"#\"\n        onClick={handleClick.bind(null, \"ALL\")}\n        className={classNames({ \"is-active\": value === \"ALL\" })}\n      >\n        All\n      </a>\n      <a\n        href=\"#\"\n        onClick={handleClick.bind(null, \"TODO\")}\n        className={classNames({ \"is-active\": value === \"TODO\" })}\n      >\n        ToDo\n      </a>\n      <a\n        href=\"#\"\n        onClick={handleClick.bind(null, \"DONE\")}\n        className={classNames({ \"is-active\": value === \"DONE\" })}\n      >\n        Done\n      </a>\n    </div>\n  );\n}\n\nexport default Filter;\n\n","import React, { useState } from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport Input from \"./Input\";\nimport Filter from \"./Filter\";\n\nconst getKey = () => Math.random().toString(32).substring(2);\n\nfunction Todo() {\n  const [items, setItems] = useState([]);\n  const [filter, setFilter] = useState(\"ALL\");\n\n  const handleAdd = (text) => {\n    setItems([...items, { key: getKey(), text, done: false }]);\n  };\n\n  const handleFilterChange = (value) => setFilter(value);\n\n  const displayItems = items.filter((item) => {\n    if (filter === \"ALL\") return true;\n    if (filter === \"TODO\") return !item.done;\n    if (filter === \"DONE\") return item.done;\n  });\n\n  const handleCheck = (checked) => {\n    const newItems = items.map((item) => {\n      if (item.key === checked.key) {\n        item.done = !item.done;\n      }\n      return item;\n    });\n    setItems(newItems);\n  };\n\n  return (\n    <div className=\"panel\">\n      <div className=\"panel-heading\">⚛️ React ToDo</div>\n      <Input onAdd={handleAdd} />\n      <Filter onChange={handleFilterChange} value={filter} />\n      {displayItems.map((item) => (\n        <TodoItem key={item.key} item={item} onCheck={handleCheck} />\n      ))}\n      <div className=\"panel-block\">{displayItems.length} items</div>\n    </div>\n  );\n}\n\nexport default Todo;\n\n","import React from 'react'\nimport Todo from './components/Todo'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"container is-fluid\">\n      <Todo />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}